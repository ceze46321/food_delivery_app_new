plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1')
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

// Load signing configuration from key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
println "Looking for key.properties at: ${keystorePropertiesFile.absolutePath}"
if (keystorePropertiesFile.exists()) {
    println "key.properties found!"
    keystorePropertiesFile.withReader('UTF-8') { reader ->
        keystoreProperties.load(reader)
    }
} else {
    throw new GradleException("Keystore file 'key.properties' not found at ${keystorePropertiesFile.absolutePath}! Please ensure it exists with the correct signing configuration.")
}

android {
    namespace "com.buyouyameal.chiw_express"
    compileSdk 34
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.buyouyameal.chiw_express"
        minSdk 21
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            def storeFilePath = keystoreProperties['storeFile'] ?: "keystore.jks"
            def storeFile = file(storeFilePath)
            println "Looking for keystore.jks at: ${storeFile.absolutePath}"
            if (!storeFile.exists()) {
                throw new GradleException("Keystore file not found at ${storeFile.absolutePath}!")
            }
            storeFile = storeFile
            storePassword keystoreProperties['storePassword']
            println "Signing Config - keyAlias: ${keyAlias}"
            println "Signing Config - keyPassword: ${keyPassword}"
            println "Signing Config - storeFile: ${storeFile.absolutePath}"
            println "Signing Config - storePassword: ${storePassword}"
        }
    }

    buildTypes {
        release {
            signingConfig null // Disable automatic signing
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

// Normalize file paths for Windows (to fix app.so URI issue)
gradle.taskGraph.whenReady { taskGraph ->
    taskGraph.allTasks.each { task ->
        if (task.name.contains("compileFlutterBuild")) {
            task.inputs.files.each { file ->
                def normalizedPath = file.absolutePath.replace('\\', '/')
                task.inputs.file(normalizedPath)
            }
            task.outputs.files.each { file ->
                def normalizedPath = file.absolutePath.replace('\\', '/')
                task.outputs.file(normalizedPath)
            }
        }
    }
}

flutter {
    source 'C:/Users/ifben/development/food_app_clean/canibuyyouameal/food_delivery_app_new'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.21"
}